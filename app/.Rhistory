text(x=1:length(cooksd)+1, y=cooksd, labels=ifelse(cooksd>4*mean(cooksd, na.rm=T),names(cooksd),""), col="red")  # add labels
cooksd <- cooks.distance(lm.reg)
plot(cooksd, main="Influential Obs by Cooks distance")
abline(h = 4*mean(cooksd, na.rm=T), col="red")  # add cutoff line
text(x=1:length(cooksd)+1, y=cooksd, labels=ifelse(cooksd>4*mean(cooksd, na.rm=T),names(cooksd),""), col="red")  # add labels
influential <- as.numeric(names(cooksd)[(cooksd > 4*mean(cooksd, na.rm=T))])
influential <- as.numeric(names(cooksd)[(cooksd > 4*mean(cooksd, na.rm=T))])
influential
influential <- cooksd[(cooksd > 4*mean(cooksd, na.rm=T))])
influential <- cooksd[(cooksd > 4*mean(cooksd, na.rm=T))]
influential
influential <- as.numeric(names(cooksd)[(cooksd > 4*mean(cooksd, na.rm=T))])
influential
library(car)
install.packages("car")
library(car)
outlierTest(lm.reg)
library(car)
outlierTest(lm.reg)
lms.reg <- lm(glu ~ npreg + bp + skin + bmi + age, data = Pima.te,method = "lms")
summary(lms.reg)
lms.reg <- lm(glu ~ npreg + bp + skin + bmi + age, data = Pima.te,method = "lms")
summary(lms.reg)
lms.reg$coefficients
lm.reg$coefficients
lms.reg$coefficients
lms.reg <- lqs(glu ~ npreg + bp + skin + bmi + age, data = Pima.te,method = "lms")
summary(lms.reg)
lms.reg <- lmsreg(glu ~ npreg + bp + skin + bmi + age, data = Pima.te)
summary(lms.reg)
lms.reg <- lmsreg(glu ~ npreg + bp + skin + bmi + age, data = Pima.te,method = "lms")
summary(lms.reg)
lms.reg <- lmsreg(glu ~ npreg + bp + skin + bmi + age, data = Pima.te,method = "lms")
lm.reg$coefficients
lms.reg$coefficients
lms.reg <- lmsreg(glu ~ npreg + bp + skin + bmi + age, data = Pima.te,method = "lms")
lms.reg$coefficients
lm.reg$coefficients
lqs(glu ~ npreg + bp + skin + bmi + age, method = "lqs")
lqs(glu ~ npreg + bp + skin + bmi + age, data = Pima.te,method = "lqs")
lms.reg <- lmsreg(glu ~ npreg + bp + skin + bmi + age, data = Pima.te,method = "lms")
lms.reg$coefficients
lm.reg$coefficients
lms.reg <- lmsreg(glu ~ npreg + bp + skin + bmi + age, data = Pima.te,method = "lms")
lms.reg$coefficients
lm.reg$coefficients
lms.reg <- lmsreg(glu ~ npreg + bp + skin + bmi + age, data = Pima.te,method = "lms")
lms.reg$coefficients
lm.reg$coefficients
lms.reg <- lmsreg(glu ~ npreg + bp + skin + bmi + age, data = Pima.te,method = "lms")
lms.reg$coefficients
lm.reg$coefficients
summary(xx)
xx <- lqs(glu ~ npreg + bp + skin + bmi + age, data = Pima.te, method = "lqs")
summary(xx)
xx <- lqs(glu ~ npreg + bp + skin + bmi + age, data = Pima.te, method = "lqs")
xx$coefficients
xx <- lqs(glu ~ npreg + bp + skin + bmi + age, data = Pima.te, method = "lqs")
xx$coefficients
xx <- lqs(glu ~ npreg + bp + skin + bmi + age, data = Pima.te, method = "lqs")
xx$coefficients
help(lqs)
lms.reg <- lmsreg(glu ~ npreg + bp + skin + bmi + age, data = Pima.te)
lms.reg$coefficients
lm.reg$coefficients
lms.reg <- lmsreg(glu ~ npreg + bp + skin + bmi + age, data = Pima.te)
lms.reg$coefficients
lm.reg$coefficients
lms.reg <- lmsreg(glu ~ npreg + bp + skin + bmi + age, data = Pima.te)
lms.reg$coefficients
lm.reg$coefficients
lms.reg <- lmsreg(glu ~ npreg + bp + skin + bmi + age, data = Pima.te)
lms.reg$coefficients
lm.reg$coefficients
lms.reg <- lmsreg(glu ~ npreg + bp + skin + bmi + age, data = Pima.te)
lms.reg$coefficients
lm.reg$coefficients
knitr::opts_chunk$set(echo = TRUE)
library(MASS)
head(bwt)
ls(MASS)
library(MASS)
bwt <- data(bwt)
library(MASS)
data <- data("birthwt")
head(birthwt)
lm.reg <- lm(formula = bwt ~ age + lwt + race +smoke + ptl + ht + ui + ftv,data = birthwt)
summary(lm.reg)
library(MASS)
library(MASS)
lm.reg <- lm(formula = bwt ~ age + lwt + race +smoke + ptl + ht + ui + ftv,data = birthwt)
summary(lm.reg)
vif(lm.reg)
library(MASS)
library(car)
lm.reg <- lm(formula = bwt ~ age + lwt + race +smoke + ptl + ht + ui + ftv,data = birthwt)
summary(lm.reg)
library(MASS)
library(car)
lm.reg <- lm(formula = bwt ~ age + lwt + race +smoke + ptl + ht + ui + ftv,data = birthwt)
summary(lm.reg)
vif(lm.reg)
ridge.reg <- lm.ridge(formula = bwt ~ age + lwt + race +smoke + ptl + ht + ui + ftv,data = birthwt,lambda = 0)
ridge.reg <- lm.ridge(formula = bwt ~ age + lwt + race +smoke + ptl + ht + ui + ftv,data = birthwt,lambda = 0)
summaryï¼ˆridge.reg)
ridge.reg <- lm.ridge(formula = bwt ~ age + lwt + race +smoke + ptl + ht + ui + ftv,data = birthwt,lambda = 0)
ridge.reg$coef
ridge.reg$Inter
ridge.reg <- lm.ridge(formula = bwt ~ age + lwt + race +smoke + ptl + ht + ui + ftv,data = birthwt,lambda = seq(0,0.1,0.0001))
ridge.reg$coef
ridge.reg <- lm.ridge(formula = bwt ~ age + lwt + race +smoke + ptl + ht + ui + ftv,data = birthwt,lambda = c(0,0.01,0.01))
ridge.reg$coef
ridge.reg <- lm.ridge(formula = bwt ~ age + lwt + race +smoke + ptl + ht + ui + ftv,data = birthwt,lambda = seq(0,0.1,0.01))
ridge.reg$coef
ridge.reg <- lm.ridge(formula = bwt ~ age + lwt + race +smoke + ptl + ht + ui + ftv,data = birthwt,lambda = seq(0,0.1,0.01))
ridge.reg$coef
lm.reg$coefficients
ridge.reg <- lm.ridge(formula = bwt ~ age + lwt + race +smoke + ptl + ht + ui + ftv,data = birthwt,lambda = seq(0,0.1,0.01))
ridge.reg$coef
library(MASS)
library(car)
library(glmnet)
install.packages("glmnet")
library(MASS)
library(car)
library(glmnet)
lm.reg <- lm(formula = bwt ~ age + lwt + race +smoke + ptl + ht + ui + ftv,data = birthwt)
summary(lm.reg)
library(MASS)
library(car)
library(glmnet)
lm.reg <- lm(formula = bwt ~ age + lwt + race +smoke + ptl + ht + ui + ftv,data = birthwt)
summary(lm.reg)
library(MASS)
library(car)
library(glmnet)
lm.reg <- lm(formula = bwt ~ age + lwt + race +smoke + ptl + ht + ui + ftv,data = birthwt)
summary(lm.reg)
x <- cbind(age,lwt,race,smoke,ptl,ht,ui,ftv)
x <- cbind(age,lwt,race,smoke,ptl,ht,ui,ftv,data = birthwt)
x <- cbind(age,lwt,race,smoke,ptl,ht,ui,ftv,data = birthwt)
x <- cbind(birthwt$age,birthwt$lwt,birthwt$race,birthwt$smoke,birthwt$ptl,birthwt$ht,birthwt$ui,birthwt$ftv)
xxx <- cv.glmnet(x = x,y = birthwt$bwt,alpha = 0)
age
xxx
xxx$glmnet.fit
x <- cbind(birthwt$age,birthwt$lwt,birthwt$race,birthwt$smoke,birthwt$ptl,birthwt$ht,birthwt$ui,birthwt$ftv)
xxx <- cv.glmnet(x = x,y = birthwt$bwt,alpha = 0)
coef(xxx$glmnet.fit, xxx$lambda.1se)
x <- cbind(birthwt$age,birthwt$lwt,birthwt$race,birthwt$smoke,birthwt$ptl,birthwt$ht,birthwt$ui,birthwt$ftv)
`colnames<-`(x,c("age","lwt","race","smoke","ptl","ht","ui","ftv"))
xxx <- cv.glmnet(x = x,y = birthwt$bwt,alpha = 0)
coef(xxx$glmnet.fit, xxx$lambda.1se)
x <- cbind(birthwt$age,birthwt$lwt,birthwt$race,birthwt$smoke,birthwt$ptl,birthwt$ht,birthwt$ui,birthwt$ftv)
x <- colnames(x,c("age","lwt","race","smoke","ptl","ht","ui","ftv"))
x <- cbind(age,birthwt$lwt,birthwt$race,birthwt$smoke,birthwt$ptl,birthwt$ht,birthwt$ui,birthwt$ftv)
x <- cbind(age = birthwt$age,
lwt = birthwt$lwt,
race = birthwt$race,
smoke = birthwt$smoke,
ptl = birthwt$ptl,
ht = birthwt$ht,
ui = birthwt$ui,
ftv = birthwt$ftv)
xxx <- cv.glmnet(x = x,y = birthwt$bwt,alpha = 0)
coef(xxx$glmnet.fit, xxx$lambda.1se)
x <- cbind(age = birthwt$age,
lwt = birthwt$lwt,
race = birthwt$race,
smoke = birthwt$smoke,
ptl = birthwt$ptl,
ht = birthwt$ht,
ui = birthwt$ui,
ftv = birthwt$ftv)
ridge.reg <- cv.glmnet(x = x,y = birthwt$bwt,alpha = 0)
coef(ridge.reg$glmnet.fit, ridge.reg$lambda.1se)
ridge.reg$lambda.1se
ridge.reg$glmnet.fit
ridge.reg$lambda.1se
ridge.reg$glmnet.fit
x <- cbind(age = birthwt$age,
lwt = birthwt$lwt,
race = birthwt$race,
smoke = birthwt$smoke,
ptl = birthwt$ptl,
ht = birthwt$ht,
ui = birthwt$ui,
ftv = birthwt$ftv)
ridge.reg <- cv.glmnet(x = x,y = birthwt$bwt,alpha = 0)
coef(ridge.reg$glmnet.fit, ridge.reg$lambda.1se)
LASSO.reg <- cv.glmnet(x = x,y = birthwt$bwt,alpha = 1)
coef(LASSO.reg$glmnet.fit, LASSO.reg$lambda.1se)
stepAIC(lm.reg)
library(party)
tree <- ctree(Churn~Contract+tenure_group+PaperlessBilling, training)
library(plyr)
library(ggplot2)
library(gridExtra)
library(ggthemes)
library(corrplot)
library(caret)
#setwd("~/Desktop")
churn <- read.csv("data.csv")
str(churn)
sapply(churn, function(x) sum(is.na(x)))
churn <- churn[complete.cases(churn), ]
##We will change ???No internet service??? to ???No??? for six columns, they are: ???OnlineSecurity???, ???OnlineBackup???, ???DeviceProtection???, ???TechSupport???, ???streamingTV???, ???streamingMovies???.
cols_recode1 <- c(10:15)
for(i in 1:ncol(churn[,cols_recode1])) {
churn[,cols_recode1][,i] <- as.factor(mapvalues
(churn[,cols_recode1][,i], from =c("No internet service"),to=c("No")))
}
##We will change ???No phone service??? to ???No??? for column ???MultipleLines???.
churn$MultipleLines <- as.factor(mapvalues(churn$MultipleLines,
from=c("No phone service"),
to=c("No")))
##Change the values in column ???SeniorCitizen??? from 0 or 1 to ???No??? or ???Yes???.
churn$SeniorCitizen <- as.factor(mapvalues(churn$SeniorCitizen,
from=c("0","1"),
to=c("No", "Yes")))
churn$customerID <- NULL
par(mfrow=c(1,2))
boxplot(churn$MonthlyCharges,main="MonthlyCharges")
hist(churn$MonthlyCharges)
churn$MonthlyCharges<-log(churn$MonthlyCharges)
boxplot(churn$MonthlyCharges,main="MonthlyCharges")
hist(churn$MonthlyCharges)
par(mfrow=c(1,2))
boxplot(churn$TotalCharges,main="TotalCharges")
hist(churn$TotalCharges)
churn$TotalCharges<-log(churn$TotalCharges)
boxplot(churn$TotalCharges,main="TotalCharges")
hist(churn$TotalCharges)
corr.matrix <- cor(churn[,c("MonthlyCharges","TotalCharges")])
corrplot(corr.matrix, main="\n\nCorrelation Plot for Numerical Variables", method="number")
ten <- ggplot(churn, aes(x=tenure)) + ggtitle("Tenure") +  xlab("Tenure") +
geom_bar(aes(y = ..count..))
ten
p<-ggplot(data=churn, aes(x=Churn,y=tenure))+geom_boxplot() +
geom_jitter(alpha = .3, color = '#9bacb9') +
geom_boxplot(alpha = .5, color = '#647985') +
stat_summary(fun.y = "mean",
geom = "point",
color = "#485c70",
shape = 8,
size = 2)
p
p1 <- ggplot(churn, aes(x=gender, fill = Churn)) + ggtitle("Gender") + xlab("Gender") +
geom_bar(aes(y = 100*(..count..)/sum(..count..)), width = 0.5,position = "dodge") + ylab("Percentage") + coord_flip() + theme_minimal()
p2 <- ggplot(churn, aes(x=SeniorCitizen, fill = Churn)) + ggtitle("Senior Citizen") + xlab("Senior Citizen") +
geom_bar(aes(y = 100*(..count..)/sum(..count..)), width = 0.5,position = "dodge") + ylab("Percentage") + coord_flip() + theme_minimal()
p3 <- ggplot(churn, aes(x=Partner,  fill = Churn)) + ggtitle("Partner") + xlab("Partner") +
geom_bar(aes(y = 100*(..count..)/sum(..count..)), width = 0.5,position = "dodge") + ylab("Percentage") + coord_flip() + theme_minimal()
p4 <- ggplot(churn, aes(x=Dependents,  fill = Churn)) + ggtitle("Dependents") + xlab("Dependents") +
geom_bar(aes(y = 100*(..count..)/sum(..count..)), width = 0.5, position = "dodge") + ylab("Percentage") + coord_flip() + theme_minimal()
grid.arrange(p1, p2, p3, p4, ncol=2)
p5 <- ggplot(churn, aes(x=PhoneService, fill = Churn)) + ggtitle("Phone Service") + xlab("Phone Service") +
geom_bar(aes(y = 100*(..count..)/sum(..count..)), width = 0.5,position = "dodge") + ylab("Percentage") + coord_flip() + theme_minimal()
p6 <- ggplot(churn, aes(x=MultipleLines, fill = Churn)) + ggtitle("Multiple Lines") + xlab("Multiple Lines") +
geom_bar(aes(y = 100*(..count..)/sum(..count..)), width = 0.5,position = "dodge") + ylab("Percentage") + coord_flip() + theme_minimal()
p7 <- ggplot(churn, aes(x=InternetService, fill = Churn)) + ggtitle("Internet Service") + xlab("Internet Service") +
geom_bar(aes(y = 100*(..count..)/sum(..count..)), width = 0.5,position = "dodge") + ylab("Percentage") + coord_flip() + theme_minimal()
p8 <- ggplot(churn, aes(x=OnlineSecurity, fill = Churn)) + ggtitle("Online Security") + xlab("Online Security") +
geom_bar(aes(y = 100*(..count..)/sum(..count..)), width = 0.5,position = "dodge" ) + ylab("Percentage") + coord_flip() + theme_minimal()
grid.arrange(p5, p6, p7, p8, ncol=2)
p9 <- ggplot(churn, aes(x=OnlineBackup,fill = Churn)) + ggtitle("Online Backup") + xlab("Online Backup") +
geom_bar(aes(y = 100*(..count..)/sum(..count..)), width = 0.5,position = "dodge") + ylab("Percentage") + coord_flip() + theme_minimal()
p10 <- ggplot(churn, aes(x=DeviceProtection,fill = Churn)) + ggtitle("Device Protection") + xlab("Device Protection") +
geom_bar(aes(y = 100*(..count..)/sum(..count..)), width = 0.5,position = "dodge") + ylab("Percentage") + coord_flip() + theme_minimal()
p11 <- ggplot(churn, aes(x=TechSupport,fill = Churn)) + ggtitle("Tech Support") + xlab("Tech Support") +
geom_bar(aes(y = 100*(..count..)/sum(..count..)), width = 0.5,position = "dodge") + ylab("Percentage") + coord_flip() + theme_minimal()
p12 <- ggplot(churn, aes(x=StreamingTV,fill = Churn)) + ggtitle("Streaming TV") + xlab("Streaming TV") +
geom_bar(aes(y = 100*(..count..)/sum(..count..)), width = 0.5,position = "dodge") + ylab("Percentage") + coord_flip() + theme_minimal()
grid.arrange(p9, p10, p11, p12, ncol=2)
p13 <- ggplot(churn, aes(x=StreamingMovies,fill = Churn)) + ggtitle("Streaming Movies") + xlab("Streaming Movies") +
geom_bar(aes(y = 100*(..count..)/sum(..count..)), width = 0.5,position = "dodge") + ylab("Percentage") + coord_flip() + theme_minimal()
p14 <- ggplot(churn, aes(x=Contract,fill = Churn)) + ggtitle("Contract") + xlab("Contract") +
geom_bar(aes(y = 100*(..count..)/sum(..count..)), width = 0.5,position = "dodge") + ylab("Percentage") + coord_flip() + theme_minimal()
p15 <- ggplot(churn, aes(x=PaperlessBilling,fill = Churn)) + ggtitle("Paperless Billing") + xlab("Paperless Billing") +
geom_bar(aes(y = 100*(..count..)/sum(..count..)), width = 0.5,position = "dodge") + ylab("Percentage") + coord_flip() + theme_minimal()
p16 <- ggplot(churn, aes(x=PaymentMethod,fill = Churn)) + ggtitle("Payment Method") + xlab("Payment Method") +
geom_bar(aes(y = 100*(..count..)/sum(..count..)), width = 0.5,position = "dodge") + ylab("Percentage") + coord_flip() + theme_minimal()
grid.arrange(p13, p14, p15, p16, ncol=2)
table.chi.test <- function(column){
t <- table(churn[,column],churn$Churn)
result <- chisq.test(churn[,column],churn$Churn)
result$data.name <- paste(column, ' and Churn')
print(t)
print(result)
}
collist <- colnames(churn)
collist <- collist[sapply(churn, is.factor)]
collist <- collist[-1]
for(each in collist){
table.chi.test(each)
}
variable<-c("Gender","Partner","Dependents","PhoneService","MultipleLines","InternetService","OnlineSecurity","OnlineBackup","DeviceProtection","TechSupport","StreamingTV","StreamingMovies","Contract","PaperlessBilling","PaymentMethod")
P_value<-c(0.4866,"< 2.2e-16","< 2.2e-16",0.3388,0.003464,"2.2e-16","< 2.2e-16","< 2.2e-16"," 2.2e-16","< 2.2e-16","< 2.2e-16","< 2.2e-16","< 2.2e-16","< 2.2e-16","< 2.2e-16")
cbind(variable,P_value)
intrain<- createDataPartition(churn$Churn,p=0.7,list=FALSE)
set.seed(2017)
training<- churn[intrain,]
testing<- churn[-intrain,]
churn$tenure_group <- cut(churn$tenure,breaks = c(0,12,24,36,48,60,72),labels = c(1,2,3,4,5,6))
churn$tenure_group <- as.factor(churn$tenure_group)
head(churn$tenure_group)
library(party)
tree <- ctree(Churn~Contract+tenure_group+PaperlessBilling, training)
churn$tenure_group <- cut(churn$tenure,breaks = c(0,12,24,36,48,60,72),labels = c(1,2,3,4,5,6))
churn$tenure_group <- as.factor(churn$tenure_group)
head(churn$tenure_group)
library(party)
tree <- ctree(Churn~Contract+tenure_group+PaperlessBilling, training)
View(churn)
churn$tenure_group <- cut(churn$tenure,breaks = c(0,12,24,36,48,60,72),labels = c(1,2,3,4,5,6))
churn$tenure_group <- as.factor(churn$tenure_group)
head(churn$tenure_group)
intrain<- createDataPartition(churn$Churn,p=0.7,list=FALSE)
set.seed(2017)
training<- churn[intrain,]
testing<- churn[-intrain,]
library(party)
tree <- ctree(Churn~Contract+tenure_group+PaperlessBilling, training)
plot(tree,type="simple")
pred_tree <- predict(tree, testing)
print("Confusion Matrix for Decision Tree"); table(Predicted = pred_tree, Actual = testing$Churn)
p1 <- predict(tree, training)
p1
tab1 <- table(Predicted = p1, Actual = training$Churn)
tab2 <- table(Predicted = pred_tree, Actual = testing$Churn)
print(paste('Decision Tree Accuracy',sum(diag(tab2))/sum(tab2)))
p1 <- predict(tree, training)
tab1 <- table(Predicted = p1, Actual = training$Churn)
tab2 <- table(Predicted = pred_tree, Actual = testing$Churn)
print(paste('Decision Tree Accuracy',sum(diag(tab2))/sum(tab2)))
View(churn)
shiny::runApp('C:/Users/yang/Desktop/GR5243/Project 2 material/Manhattan housing')
runApp('C:/Users/yang/Desktop/GR5243/Project 2 material/Manhattan housing')
runApp('C:/Users/yang/Desktop/GR5243/Project 2 material/Manhattan housing')
runApp('C:/Users/yang/Desktop/GR5243/Project 2 material/Manhattan housing')
runApp('C:/Users/yang/Desktop/GR5243/Project 2 material/Manhattan housing')
runApp('C:/Users/yang/Desktop/GR5243/Project 2 material/Manhattan housing')
runApp('C:/Users/yang/Desktop/GR5243/Project 2 material/Manhattan housing')
runApp('C:/Users/yang/Desktop/GR5243/Project 2 material/Manhattan housing')
shiny::runApp('C:/Users/yang/Desktop/GR5243/Project 2 material/Manhattan housing')
shiny::runApp('C:/Users/yang/Desktop/GR5243/Project 2 material/Manhattan housing')
runApp('C:/Users/yang/Desktop/GR5243/Project 2 material/Fall2017-project2-grp6-master/app')
runApp('C:/Users/yang/Desktop/GR5243/Project 2 material/Fall2017-project2-grp6-master/app')
knitr::opts_chunk$set(echo = TRUE)
x <- cbind(age = birthwt$age,
lwt = birthwt$lwt,
race = birthwt$race,
smoke = birthwt$smoke,
ptl = birthwt$ptl,
ht = birthwt$ht,
ui = birthwt$ui,
ftv = birthwt$ftv)
ridge.reg <- cv.glmnet(x = x,y = birthwt$bwt,alpha = 0)
knitr::opts_chunk$set(echo = TRUE)
library(MASS)
library(car)
library(glmnet)
lm.reg <- lm(formula = bwt ~ age + lwt + race +smoke + ptl + ht + ui + ftv,data = birthwt)
summary(lm.reg)
vif(lm.reg)
x <- cbind(age = birthwt$age,
lwt = birthwt$lwt,
race = birthwt$race,
smoke = birthwt$smoke,
ptl = birthwt$ptl,
ht = birthwt$ht,
ui = birthwt$ui,
ftv = birthwt$ftv)
ridge.reg <- cv.glmnet(x = x,y = birthwt$bwt,alpha = 0)
coef(ridge.reg$glmnet.fit, ridge.reg$lambda.min)
LASSO.reg <- cv.glmnet(x = x,y = birthwt$bwt,alpha = 1)
coef(LASSO.reg$glmnet.fit, LASSO.reg$lambda.1se)
stepAIC(lm.reg)
LASSO.reg <- cv.glmnet(x = x,y = birthwt$bwt,alpha = 1)
coef(LASSO.reg$glmnet.fit, LASSO.reg$lambda.min)
LASSO.reg <- cv.glmnet(x = x,y = birthwt$bwt,alpha = 1)
coef(LASSO.reg$glmnet.fit, LASSO.reg$lambda.min)
library(MASS)
library(car)
library(glmnet)
lm.reg <- lm(formula = bwt ~ age + lwt + race +smoke + ptl + ht + ui + ftv,data = birthwt)
summary(lm.reg)
shiny::runApp('C:/Users/yang/Desktop/GR5243/Fall2018-Project2-sec1proj2_grp5/app')
runApp('C:/Users/yang/Desktop/GR5243/Fall2018-Project2-sec1proj2_grp5/app')
runApp('C:/Users/yang/Desktop/GR5243/Fall2018-Project2-sec1proj2_grp5/app')
library(plyr)
library(ggplot2)
library(gridExtra)
library(ggthemes)
library(corrplot)
library(caret)
#setwd("~/Desktop")
churn <- read.csv("data.csv")
#str(churn)
sapply(churn, function(x) sum(is.na(x)))
churn <- churn[complete.cases(churn), ]
##We will change ???No internet service??? to ???No??? for six columns, they are: ???OnlineSecurity???, ???OnlineBackup???, ???DeviceProtection???, ???TechSupport???, ???streamingTV???, ???streamingMovies???.
cols_recode1 <- c(10:15)
for(i in 1:ncol(churn[,cols_recode1])) {
churn[,cols_recode1][,i] <- as.factor(mapvalues
(churn[,cols_recode1][,i], from =c("No internet service"),to=c("No")))
}
##We will change ???No phone service??? to ???No??? for column ???MultipleLines???.
churn$MultipleLines <- as.factor(mapvalues(churn$MultipleLines,
from=c("No phone service"),
to=c("No")))
##Change the values in column ???SeniorCitizen??? from 0 or 1 to ???No??? or ???Yes???.
churn$SeniorCitizen <- as.factor(mapvalues(churn$SeniorCitizen,
from=c("0","1"),
to=c("No", "Yes")))
churn$customerID <- NULL
library('lattice')
library('caret')
intrain <- createDataPartition(churn$Churn, p = 0.7, list = FALSE)
set.seed(2017)
training1<- churn[intrain,]
testing1<- churn[-intrain,]
library(party)
tree <- ctree(Churn~SeniorCitizen + Dependents + tenure + PhoneService +
MultipleLines + OnlineSecurity + OnlineBackup + DeviceProtection +
TechSupport + StreamingTV + StreamingMovies + Contract +
PaperlessBilling + MonthlyCharges, training1)
plot(tree,type = "simple")
library(rpart)
Model <- rpart(Churn ~.-TotalCharges,data = training1, method = "class")
#plot(Model)
#text(Model,pretty = 0)
summary(Model)
Prediction <- predict(Model,testing1,type = "class")
t <- table(predictions = Prediction,actual = testing1$Churn)
t
sum(diag(t))/sum(t)
library(pROC)
PredictionWithProbs <- predict(Model,testing1,type = "prob")
auc <- auc(testing1$Churn,PredictionWithProbs[,2])
auc
plot(roc(testing1$Churn,PredictionWithProbs[,2]))
library(party)
tree <- ctree(Churn~SeniorCitizen + Dependents + tenure + PhoneService +
MultipleLines + OnlineSecurity + OnlineBackup + DeviceProtection +
TechSupport + StreamingTV + StreamingMovies + Contract +
PaperlessBilling + MonthlyCharges, training1)
plot(tree,type = "simple")
library(rpart)
Model <- rpart(Churn ~.-TotalCharges,data = training1, method = "class")
plot(Model)
text(Model,pretty = 0)
summary(Model)
library(rpart)
Model <- rpart(Churn ~.-TotalCharges,data = training1, method = "class")
plot(Model)
text(Model,pretty = 0)
#summary(Model)
library(rpart)
Model <- rpart(Churn ~.-TotalCharges,data = training1, method = "class")
plot(Model)
text(Model,pretty = 0)
FullModel <- rpart(Churn ~.,data = training1, method = "class")
Prediction_full <- predict(FullModel,testing1,type = "class")
t_full <- table(predictions = Prediction_full,actual = testing1$Churn)
sum(diag(t_full))/sum(t_full)
FullModel <- rpart(Churn ~.,data = training1, method = "class")
Prediction_full <- predict(FullModel,testing1,type = "class")
t_full <- table(predictions = Prediction_full,actual = testing1$Churn)
sum(diag(t_full))/sum(t_full)
PredictionWithProbs_full <- predict(FullModel,testing1,type = "prob")
auc_full <- auc(testing1$Churn,PredictionWithProbs_full[,2])
auc_full
library(rpart)
#Model <- rpart(Churn ~.-TotalCharges,data = training1, method = "class")
Model1<-rpart(Churn ~TotalCharges+MonthlyCharges+InternetService+Contract+tenure_group,data = training1, method = "class")
View(churn)
library(rpart)
#Model <- rpart(Churn ~.-TotalCharges,data = training1, method = "class")
Model1<-rpart(Churn ~TotalCharges+MonthlyCharges+InternetService+Contract+tenure,data = training1, method = "class")
plot(Model1)
#text(Model,pretty = 0)
#summary(Model)
library(rpart)
#Model <- rpart(Churn ~.-TotalCharges,data = training1, method = "class")
Model1<-rpart(Churn ~TotalCharges+MonthlyCharges+InternetService+Contract+tenure,data = training1, method = "class")
plot(Model1)
text(Model1,pretty = 0)
#summary(Model)
shiny::runApp('C:/Users/yang/Desktop/GR5243/Fall2018-Project2-sec1proj2_grp5/app')
runApp('C:/Users/yang/Desktop/GR5243/Fall2018-Project2-sec1proj2_grp5/app')
runApp('C:/Users/yang/Desktop/GR5243/Project 2 material/Spr2017-proj2-grp14-master/app')
runApp('C:/Users/yang/Desktop/GR5243/Project 2 material/Fall2017-project2-grp6-master/app')
runApp('C:/Users/yang/Desktop/GR5243/Project 2 material/Fall2017-project2-grp5-master/app')
runApp('C:/Users/yang/Desktop/GR5243/Fall2018-Project2-sec1proj2_grp5/app')
runApp('C:/Users/yang/Desktop/GR5243/Fall2018-Project2-sec1proj2_grp5/app')
runApp('C:/Users/yang/Desktop/GR5243/Fall2018-Project2-sec1proj2_grp5/app')
runApp('C:/Users/yang/Desktop/GR5243/Fall2018-Project2-sec1proj2_grp5/app')
runApp('C:/Users/yang/Desktop/GR5243/Project 2 material/Fall2018-Project2-sec1proj2_grp5/app')
runApp('C:/Users/yang/Desktop/GR5243/Fall2018-Project2-sec1proj2_grp5/app')
runApp('C:/Users/yang/Desktop/GR5243/Fall2018-Project2-sec1proj2_grp5/app')
runApp('C:/Users/yang/Desktop/GR5243/Fall2018-Project2-sec1proj2_grp5/app')
shiny::runApp('C:/Users/yang/Desktop/GR5243/Fall2018-Project2-sec1proj2_grp5/app')
runApp('C:/Users/yang/Desktop/GR5243/Fall2018-Project2-sec1proj2_grp5/app')
runApp('C:/Users/yang/Desktop/GR5243/Fall2018-Project2-sec1proj2_grp5/app')
runApp('C:/Users/yang/Desktop/GR5243/Fall2018-Project2-sec1proj2_grp5/app')
setwd("C:/Users/yang/Desktop/GR5243/Fall2018-Project2-sec1proj2_grp5/app")
runApp()
runApp()
runApp()
runApp()
runApp()
